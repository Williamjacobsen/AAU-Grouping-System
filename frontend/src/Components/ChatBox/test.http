# ============================
# REST: Fetch existing messages
# ============================

### Get all messages for a group
GET http://localhost:8080/group/group%201/messages/get/all
Accept: application/json

### Get all private messages between two users
GET http://localhost:8080/private/My%20username/student%202/messages/get/all
Accept: application/json



# =================================================
# WEBSOCKET (STOMP) FLOW — IntelliJ HTTP Client
# =================================================
# Notes:
# - This targets your SockJS endpoint using raw WS: ws://localhost:8080/ws/websocket
# - Frames below are raw STOMP frames.
# - If your server requires a Principal derived from the "username" STOMP header,
#   make sure your handshake maps that value to the Principal.
# - Open two WS tabs (one as student1, one as student2) to test private messages.
#   In each, CONNECT with the desired username, then SUBSCRIBE, then SEND.
#
# How to use in IntelliJ:
# 1) Place the caret in a WEBSOCKET request
# 2) Click the green ▶ icon to open the WS console
# 3) Send each STOMP frame block as a message (select block and click "Send")
# =================================================


# -------------------------------
# Session A (student1)
# -------------------------------
WEBSOCKET ws://localhost:8080/ws/websocket

###
# CONNECT as student1
CONNECT
accept-version:1.2
host:localhost
username:student1

^@

###
# SUBSCRIBE to acks (optional) and to a group topic
SUBSCRIBE
id:sub-acks
destination:/user/queue/acks

^@

###
SUBSCRIBE
id:sub-group
destination:/group/group-1/messages

^@

###
# SUBSCRIBE to private replies (so student1 can receive DMs)
SUBSCRIBE
id:sub-private
destination:/user/private/reply

^@

###
# SEND a group message to group-1
SEND
destination:/group/group-1/send

{"content":"Hello from student1 to group-1","sender":"student1","target":null}
^@

###
# SEND a private message to student2
SEND
destination:/private/send

{"content":"Hi student2, this is student1","sender":"student1","target":"student2"}
^@


# -------------------------------
# Session B (student2)
# -------------------------------
WEBSOCKET ws://localhost:8080/ws/websocket

###
# CONNECT as student2
CONNECT
accept-version:1.2
host:localhost
username:student2

^@

###
# SUBSCRIBE to private replies (so student2 can receive DMs)
SUBSCRIBE
id:sub-private
destination:/user/private/reply

^@

###
# Optionally subscribe to group as well
SUBSCRIBE
id:sub-group
destination:/group/group-1/messages

^@

###
# Reply privately to student1
SEND
destination:/private/send

{"content":"Hey student1, got your DM!","sender":"student2","target":"student1"}
^@



# ===========================================
# STOMP framing helpers / cheat sheet
# ===========================================
# - Each STOMP frame:
#     <COMMAND>\n
#     header1:value1\n
#     header2:value2\n
#     ...\n
#     \n
#     <optional body>
#     \0      (NUL terminator)
#
# - In IntelliJ HTTP Client, use ^@ to represent the NUL terminator.
# - Send each frame block separately.
#
# Common commands:
#   CONNECT, SUBSCRIBE, SEND, DISCONNECT
#
# Common destinations (from your app):
#   /group/{groupId}/send
#   /group/{groupId}/messages
#   /private/send
#   /user/private/reply
#   /user/queue/acks
